{%- comment -%}
  Snippet: product-password-gate.liquid
  Uso:
    - Llamar desde theme.liquid SOLO en páginas product con tag 'NVY: GATED'.
    - Ej.: 
      {% if request.page_type == 'product' and product.tags contains 'NVY: GATED' %}
        {% render 'product-password-gate', container_selector: '#main' %}
      {% endif %}
  Notas:
    - Contraseña en claro (expuesta en el JS). Úsalo solo para gating ligero.
    - Cookie de 1 día. Cambiar a per-producto o global con COOKIE_SCOPE.
{%- endcomment -%}

{%- assign container_selector = container_selector | default: '#main' -%}

<style>
  /* Oculta el contenedor del producto cuando está bloqueado */
  #main.pp-locked { display: none !important; }

  /* Estilos del overlay (pantalla completa) */
  #pp-gate__overlay {
    min-height: 600px;
    padding: 24px;
  }
  #pp-gate__panel {
    max-width: 480px; margin: 10vh auto;
    background: #fff; border-radius: 16px;
    padding: 20px; box-shadow: 0 10px 30px rgba(0,0,0,.2);
  }
  #pp-gate__title { margin: 0 0 .5rem 0; font-size: 1.125rem; }
  #pp-gate__desc { margin: .25rem 0 1rem 0; color: #374151; }
  #pp-gate__form {display: flex;gap: .5rem;align-items: center;flex-wrap: wrap;}
  #pp-gate__input {
    flex: 1; padding: .6rem .8rem; border: 1px solid #d1d5db; border-radius: .75rem;
  }
  #pp-gate__btn {
    padding: .6rem 1rem; border-radius: .75rem; border: 1px solid #111827;
    background: #111827; color: #fff; cursor: pointer;
  }
  #pp-gate__error { display: none; color: #b91c1c; margin-top: .75rem; }

  /* Aquí puedes agregar estilos personalizados adicionales del password gate */
  /* .pp-gate--custom { ... } */
</style>

<div id="pp-gate"
     data-product-id="{{ product.id }}"
     data-container="{{ container_selector | escape }}">
  <div id="pp-gate__overlay" role="dialog" aria-modal="true" aria-labelledby="pp-gate__title">
    <div id="pp-gate__panel">
      <h3 id="pp-gate__title">Protected content</h3>
      <p id="pp-gate__desc">Enter the password to view this product.</p>
      <form id="pp-gate__form" autocomplete="off">
        <input id="pp-gate__input" type="password" placeholder="Password" />
        <button id="pp-gate__btn" type="submit">Enter</button>
      </form>
      <p id="pp-gate__error">Incorrect password.</p>
    </div>
  </div>
</div>

<script>
(function() {
  const root = document.getElementById('pp-gate');
  if (!root) return;

  // === CONFIGURACIÓN RÁPIDA ===
  const PASSWORD = 'DS18_NVY';   // <-- tu contraseña global
  const COOKIE_SCOPE = 'global';     // 'per_product' | 'global'
  const COOKIE_VERSION = 'v2';       // sube a 'v2' si cambias la contraseña
  // ============================

  const productId = root.dataset.productId;
  const containerSel = root.dataset.container || '#main';
  const container = document.querySelector(containerSel);

  const baseName = COOKIE_SCOPE === 'global' ? 'pp_access_global' : `pp_access_${productId}`;
  const cookieName = `${baseName}_${COOKIE_VERSION}`;

  const overlay = document.getElementById('pp-gate__overlay');
  const form = document.getElementById('pp-gate__form');
  const input = document.getElementById('pp-gate__input');
  const errorEl = document.getElementById('pp-gate__error');

  function getCookie(name) {
    return document.cookie.split('; ').find(r => r.startsWith(name + '='))?.split('=')[1];
  }

  // === Cookie hasta el final del día LOCAL del usuario ===
  function setCookieUntilTonight(name, value) {
    const now = new Date();
    const expire = new Date(now);
    expire.setHours(23, 59, 59, 999); // hoy 23:59:59.999 (hora local del navegador)
    // Si por alguna razón ya pasó (p.ej., reloj raro), pon mañana 23:59:59
    if (expire <= now) {
      expire.setDate(expire.getDate() + 1);
      expire.setHours(23, 59, 59, 999);
    }
    const secure = location.protocol === 'https:' ? '; Secure' : '';
    document.cookie = `${name}=${value}; expires=${expire.toUTCString()}; path=/; SameSite=Lax${secure}`;
  }

  function unlock() {
    if (overlay) overlay.style.display = 'none';
    container?.classList.remove('pp-locked');
  }
  function lock() {
    if (overlay) overlay.style.display = 'block';
    container?.classList.add('pp-locked'); // por si el server no la puso
  }

  // Estado inicial
  if (getCookie(cookieName) === '1') {
    unlock();
  } else {
    lock();
  }

  // Validación
  form?.addEventListener('submit', (e) => {
    e.preventDefault();
    if (errorEl) errorEl.style.display = 'none';

    const ok = input?.value === PASSWORD;
    if (ok) {
      // Por defecto: expira al final del día LOCAL del usuario
      setCookieUntilTonight(cookieName, '1');

      // Si prefieres SIEMPRE fin del día en una zona fija, usa esta línea en su lugar:
      // setCookieUntilEndOfDayTZ(cookieName, '1', 'America/Bogota');

      // Ocultamos al instante y recargamos para que todo (incl. sliders) inicie limpio
      unlock();
      setTimeout(() => { window.location.reload(); }, 1);
    } else {
      if (errorEl) errorEl.style.display = 'block';
      input?.focus();
      input?.select?.();
    }
  });
})();
</script>
